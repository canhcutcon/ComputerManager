#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO_ComputerManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ComputerManagerment")]
	public partial class ComputerManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcomputer(computer instance);
    partial void Updatecomputer(computer instance);
    partial void Deletecomputer(computer instance);
    partial void Insertroom(room instance);
    partial void Updateroom(room instance);
    partial void Deleteroom(room instance);
    #endregion
		
		public ComputerManagerDataContext() : 
				base(global::DAO_ComputerManager.Properties.Settings.Default.ComputerManagermentConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ComputerManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<computer> computers
		{
			get
			{
				return this.GetTable<computer>();
			}
		}
		
		public System.Data.Linq.Table<room> rooms
		{
			get
			{
				return this.GetTable<room>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.computer")]
	public partial class computer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idComputer;
		
		private string _cpu;
		
		private string _vga;
		
		private string _hardisk;
		
		private string _ram;
		
		private string _monitor;
		
		private string _idRoom;
		
		private EntityRef<room> _room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComputerChanging(string value);
    partial void OnidComputerChanged();
    partial void OncpuChanging(string value);
    partial void OncpuChanged();
    partial void OnvgaChanging(string value);
    partial void OnvgaChanged();
    partial void OnhardiskChanging(string value);
    partial void OnhardiskChanged();
    partial void OnramChanging(string value);
    partial void OnramChanged();
    partial void OnmonitorChanging(string value);
    partial void OnmonitorChanged();
    partial void OnidRoomChanging(string value);
    partial void OnidRoomChanged();
    #endregion
		
		public computer()
		{
			this._room = default(EntityRef<room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComputer", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idComputer
		{
			get
			{
				return this._idComputer;
			}
			set
			{
				if ((this._idComputer != value))
				{
					this.OnidComputerChanging(value);
					this.SendPropertyChanging();
					this._idComputer = value;
					this.SendPropertyChanged("idComputer");
					this.OnidComputerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu", DbType="NVarChar(100)")]
		public string cpu
		{
			get
			{
				return this._cpu;
			}
			set
			{
				if ((this._cpu != value))
				{
					this.OncpuChanging(value);
					this.SendPropertyChanging();
					this._cpu = value;
					this.SendPropertyChanged("cpu");
					this.OncpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vga", DbType="NVarChar(100)")]
		public string vga
		{
			get
			{
				return this._vga;
			}
			set
			{
				if ((this._vga != value))
				{
					this.OnvgaChanging(value);
					this.SendPropertyChanging();
					this._vga = value;
					this.SendPropertyChanged("vga");
					this.OnvgaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardisk", DbType="NVarChar(100)")]
		public string hardisk
		{
			get
			{
				return this._hardisk;
			}
			set
			{
				if ((this._hardisk != value))
				{
					this.OnhardiskChanging(value);
					this.SendPropertyChanging();
					this._hardisk = value;
					this.SendPropertyChanged("hardisk");
					this.OnhardiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ram", DbType="NVarChar(100)")]
		public string ram
		{
			get
			{
				return this._ram;
			}
			set
			{
				if ((this._ram != value))
				{
					this.OnramChanging(value);
					this.SendPropertyChanging();
					this._ram = value;
					this.SendPropertyChanged("ram");
					this.OnramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monitor", DbType="NVarChar(100)")]
		public string monitor
		{
			get
			{
				return this._monitor;
			}
			set
			{
				if ((this._monitor != value))
				{
					this.OnmonitorChanging(value);
					this.SendPropertyChanging();
					this._monitor = value;
					this.SendPropertyChanged("monitor");
					this.OnmonitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoom", DbType="Char(10)")]
		public string idRoom
		{
			get
			{
				return this._idRoom;
			}
			set
			{
				if ((this._idRoom != value))
				{
					if (this._room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRoomChanging(value);
					this.SendPropertyChanging();
					this._idRoom = value;
					this.SendPropertyChanged("idRoom");
					this.OnidRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_computer", Storage="_room", ThisKey="idRoom", OtherKey="idRoom", IsForeignKey=true)]
		public room room
		{
			get
			{
				return this._room.Entity;
			}
			set
			{
				room previousValue = this._room.Entity;
				if (((previousValue != value) 
							|| (this._room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._room.Entity = null;
						previousValue.computers.Remove(this);
					}
					this._room.Entity = value;
					if ((value != null))
					{
						value.computers.Add(this);
						this._idRoom = value.idRoom;
					}
					else
					{
						this._idRoom = default(string);
					}
					this.SendPropertyChanged("room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.room")]
	public partial class room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idRoom;
		
		private string _nameRoom;
		
		private string _building;
		
		private System.Nullable<int> _floorR;
		
		private EntitySet<computer> _computers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRoomChanging(string value);
    partial void OnidRoomChanged();
    partial void OnnameRoomChanging(string value);
    partial void OnnameRoomChanged();
    partial void OnbuildingChanging(string value);
    partial void OnbuildingChanged();
    partial void OnfloorRChanging(System.Nullable<int> value);
    partial void OnfloorRChanged();
    #endregion
		
		public room()
		{
			this._computers = new EntitySet<computer>(new Action<computer>(this.attach_computers), new Action<computer>(this.detach_computers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRoom", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idRoom
		{
			get
			{
				return this._idRoom;
			}
			set
			{
				if ((this._idRoom != value))
				{
					this.OnidRoomChanging(value);
					this.SendPropertyChanging();
					this._idRoom = value;
					this.SendPropertyChanged("idRoom");
					this.OnidRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nameRoom", DbType="NVarChar(100)")]
		public string nameRoom
		{
			get
			{
				return this._nameRoom;
			}
			set
			{
				if ((this._nameRoom != value))
				{
					this.OnnameRoomChanging(value);
					this.SendPropertyChanging();
					this._nameRoom = value;
					this.SendPropertyChanged("nameRoom");
					this.OnnameRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_building", DbType="NVarChar(100)")]
		public string building
		{
			get
			{
				return this._building;
			}
			set
			{
				if ((this._building != value))
				{
					this.OnbuildingChanging(value);
					this.SendPropertyChanging();
					this._building = value;
					this.SendPropertyChanged("building");
					this.OnbuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_floorR", DbType="Int")]
		public System.Nullable<int> floorR
		{
			get
			{
				return this._floorR;
			}
			set
			{
				if ((this._floorR != value))
				{
					this.OnfloorRChanging(value);
					this.SendPropertyChanging();
					this._floorR = value;
					this.SendPropertyChanged("floorR");
					this.OnfloorRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_computer", Storage="_computers", ThisKey="idRoom", OtherKey="idRoom")]
		public EntitySet<computer> computers
		{
			get
			{
				return this._computers;
			}
			set
			{
				this._computers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_computers(computer entity)
		{
			this.SendPropertyChanging();
			entity.room = this;
		}
		
		private void detach_computers(computer entity)
		{
			this.SendPropertyChanging();
			entity.room = null;
		}
	}
}
#pragma warning restore 1591
